0 info it worked if it ends with ok
1 verbose cli [ 'node', '/usr/local/bin/npm', 'install', 'qunit' ]
2 info using npm@1.4.9
3 info using node@v0.10.28
4 verbose readDependencies using package.json deps
5 verbose cache add [ 'qunit', null ]
6 verbose cache add name=undefined spec="qunit" args=["qunit",null]
7 verbose parsed url { protocol: null,
7 verbose parsed url   slashes: null,
7 verbose parsed url   auth: null,
7 verbose parsed url   host: null,
7 verbose parsed url   port: null,
7 verbose parsed url   hostname: null,
7 verbose parsed url   hash: null,
7 verbose parsed url   search: null,
7 verbose parsed url   query: null,
7 verbose parsed url   pathname: 'qunit',
7 verbose parsed url   path: 'qunit',
7 verbose parsed url   href: 'qunit' }
8 silly lockFile 85abf8fd-qunit qunit
9 verbose lock qunit /Users/paul/.npm/85abf8fd-qunit.lock
10 silly lockFile 85abf8fd-qunit qunit
11 silly lockFile 85abf8fd-qunit qunit
12 verbose addNamed [ 'qunit', '' ]
13 verbose addNamed [ null, '*' ]
14 silly lockFile f2975d62-qunit qunit@
15 verbose lock qunit@ /Users/paul/.npm/f2975d62-qunit.lock
16 silly addNameRange { name: 'qunit', range: '*', hasData: false }
17 verbose registry.get qunit not expired, no request
18 silly addNameRange number 2 { name: 'qunit', range: '*', hasData: true }
19 silly addNameRange versions [ 'qunit',
19 silly addNameRange   [ '0.0.3',
19 silly addNameRange     '0.0.4',
19 silly addNameRange     '0.0.5',
19 silly addNameRange     '0.0.6',
19 silly addNameRange     '0.0.7',
19 silly addNameRange     '0.0.8',
19 silly addNameRange     '0.1.1',
19 silly addNameRange     '0.1.2',
19 silly addNameRange     '0.1.3',
19 silly addNameRange     '0.1.5',
19 silly addNameRange     '0.2.6',
19 silly addNameRange     '0.2.7',
19 silly addNameRange     '0.2.8',
19 silly addNameRange     '0.2.9',
19 silly addNameRange     '0.2.10',
19 silly addNameRange     '0.3.0',
19 silly addNameRange     '0.4.0',
19 silly addNameRange     '0.5.0',
19 silly addNameRange     '0.5.1',
19 silly addNameRange     '0.5.2',
19 silly addNameRange     '0.5.3',
19 silly addNameRange     '0.5.5',
19 silly addNameRange     '0.5.6',
19 silly addNameRange     '0.5.7',
19 silly addNameRange     '0.5.8',
19 silly addNameRange     '0.5.9',
19 silly addNameRange     '0.5.11',
19 silly addNameRange     '0.5.12',
19 silly addNameRange     '0.5.13',
19 silly addNameRange     '0.5.14',
19 silly addNameRange     '0.5.15',
19 silly addNameRange     '0.5.16',
19 silly addNameRange     '0.5.17',
19 silly addNameRange     '0.5.18',
19 silly addNameRange     '0.6.0',
19 silly addNameRange     '0.6.1',
19 silly addNameRange     '0.6.2',
19 silly addNameRange     '0.6.3',
19 silly addNameRange     '0.2.0-pre',
19 silly addNameRange     '0.2.2-pre',
19 silly addNameRange     '0.2.3-pre',
19 silly addNameRange     '0.2.4-pre',
19 silly addNameRange     '0.2.5-pre' ] ]
20 verbose addNamed [ 'qunit', '0.6.3' ]
21 verbose addNamed [ '0.6.3', '0.6.3' ]
22 silly lockFile 29f26625-qunit-0-6-3 qunit@0.6.3
23 verbose lock qunit@0.6.3 /Users/paul/.npm/29f26625-qunit-0-6-3.lock
24 silly lockFile 29f26625-qunit-0-6-3 qunit@0.6.3
25 silly lockFile 29f26625-qunit-0-6-3 qunit@0.6.3
26 silly lockFile f2975d62-qunit qunit@
27 silly lockFile f2975d62-qunit qunit@
28 silly resolved [ { name: 'qunit',
28 silly resolved     description: 'QUnit testing framework for nodejs',
28 silly resolved     version: '0.6.3',
28 silly resolved     author: { name: 'Oleg Slobodskoi', email: 'oleg008@gmail.com' },
28 silly resolved     contributors: [ [Object], [Object], [Object] ],
28 silly resolved     repository: { type: 'git', url: 'http://github.com/kof/node-qunit.git' },
28 silly resolved     keywords: [ 'TDD', 'QUnit', 'unit', 'testing', 'tests', 'async' ],
28 silly resolved     bin: { qunit: './bin/cli.js' },
28 silly resolved     engines: { node: '>=0.6.0 < 0.11.0' },
28 silly resolved     scripts: { test: 'node ./test/testrunner.js' },
28 silly resolved     dependencies:
28 silly resolved      { underscore: '^1.6.0',
28 silly resolved        argsparser: '^0.0.6',
28 silly resolved        'cli-table': '^0.3.0',
28 silly resolved        tracejs: '^0.1.8',
28 silly resolved        qunitjs: '1.10.0',
28 silly resolved        istanbul: '^0.2.4' },
28 silly resolved     devDependencies: { chainer: '^0.0.5', timekeeper: '^0.0.4' },
28 silly resolved     optionalDependencies: { istanbul: '^0.2.4' },
28 silly resolved     licenses: [ [Object] ],
28 silly resolved     readme: '## QUnit testing framework for nodejs.\n\nhttp://qunitjs.com\n\nhttp://github.com/jquery/qunit\n\n### Features\n\n- cli\n- testrunner api\n- test coverage via istanbul\n- tests inside of one testfile run synchronous, but every testfile runs parallel\n- tests from each file run in its own spawned node process\n- same API for client and server side code (original QUnit is used)\n- the simplest API of the world, especially for asynchronous testing\n- you can write tests in TDD or BDD style depending on your task and test type\n- you can run the same tests in browser if there is no dependencies to node\n\n### Installation\n\n    npm i qunit\n\n### API\n\n    http://api.qunitjs.com\n\n#### The only exception\n\n    // Separate tests into modules.\n    // Use `QUnit` namespace, because `module` is reserved for node.\n    QUnit.module(name, lifecycle)\n\n### Usage\n\n#### Command line\n\nRead full cli api doc using "--help" or "-h":\n\n    $ qunit -h\n\n    $ qunit -c ./code.js -t ./tests.js\n\nBy default, code and dependencies are added to the global scope. To specify\nrequiring them into a namespace object, prefix the path or module name with the\nvariable name to be used for the namespace object, followed by a colon:\n\n    $ qunit -c code:./code.js -d utils:utilmodule -t ./time.js\n\n#### via api\n\n    var testrunner = require("qunit");\n\n    Defaults:\n\n        {\n            // logging options\n            log: {\n\n                // log assertions overview\n                assertions: true,\n\n                // log expected and actual values for failed tests\n                errors: true,\n\n                // log tests overview\n                tests: true,\n\n                // log summary\n                summary: true,\n\n                // log global summary (all files)\n                globalSummary: true,\n\n                // log coverage\n                coverage: true,\n\n                // log global coverage (all files)\n                globalCoverage: true,\n\n                // log currently testing code file\n                testing: true\n            },\n\n            // run test coverage tool\n            coverage: false,\n\n            // define dependencies, which are required then before code\n            deps: null,\n\n            // define namespace your code will be attached to on global[\'your namespace\']\n            namespace: null\n        }\n\n\n    // change any option for all tests globally\n    testrunner.options.optionName = value;\n\n    // or use setup function\n    testrunner.setup({\n        log: {\n            summary: true\n        }\n    });\n\n\n    // one code and tests file\n    testrunner.run({\n        code: "/path/to/your/code.js",\n        tests: "/path/to/your/tests.js"\n    }, callback);\n\n    // require code into a namespace object, rather than globally\n    testrunner.run({\n        code: {path: "/path/to/your/code.js", namespace: "code"},\n        tests: "/path/to/your/tests.js"\n    }, callback);\n\n    // one code and multiple tests file\n    testrunner.run({\n        code: "/path/to/your/code.js",\n        tests: ["/path/to/your/tests.js", "/path/to/your/tests1.js"]\n    }, callback);\n\n    // array of code and test files\n    testrunner.run([\n        {\n            code: "/path/to/your/code.js",\n            tests: "/path/to/your/tests.js"\n        },\n        {\n            code: "/path/to/your/code.js",\n            tests: "/path/to/your/tests.js"\n        }\n    ], callback);\n\n    // using testrunner callback\n    testrunner.run({\n        code: "/path/to/your/code.js",\n        tests: "/path/to/your/tests.js"\n    }, function(err, report) {\n        console.dir(report);\n    });\n\n    // specify dependency\n    testrunner.run({\n        deps: "/path/to/your/dependency.js",\n        code: "/path/to/your/code.js",\n        tests: "/path/to/your/tests.js"\n    }, callback);\n\n    // dependencies can be modules or files\n    testrunner.run({\n        deps: "modulename",\n        code: "/path/to/your/code.js",\n        tests: "/path/to/your/tests.js"\n    }, callback);\n\n    // dependencies can required into a namespace object\n    testrunner.run({\n        deps: {path: "utilmodule", namespace: "utils"},\n        code: "/path/to/your/code.js",\n        tests: "/path/to/your/tests.js"\n    }, callback);\n\n    // specify multiple dependencies\n    testrunner.run({\n        deps: ["/path/to/your/dependency1.js", "/path/to/your/dependency2.js"],\n        code: "/path/to/your/code.js",\n        tests: "/path/to/your/tests.js"\n    }, callback);\n\n### Writing tests\n\nQUnit API and code which have to be tested are already loaded and attached to the global context.\n\nSome tests examples\n\n\n    test("a basic test example", function (assert) {\n        ok(true, "this test is fine");\n        var value = "hello";\n        equal("hello", value, "We expect value to be hello");\n    });\n\n    QUnit.module("Module A");\n\n    test("first test within module", 1, function (assert) {\n        ok(true, "a dummy");\n    });\n\n    test("second test within module", 2, function (assert) {\n        ok(true, "dummy 1 of 2");\n        ok(true, "dummy 2 of 2");\n    });\n\n    QUnit.module("Module B", {\n        setup: function () {\n            // do some initial stuff before every test for this module\n        },\n        teardown: function () {\n            // do some stuff after every test for this module\n        }\n    });\n\n    test("some other test", function (assert) {\n        expect(2);\n        equal(true, false, "failing test");\n        equal(true, true, "passing test");\n    });\n\n    QUnit.module("Module C", {\n        setup: function() {\n            // setup a shared environment for each test\n            this.options = { test: 123 };\n        }\n    });\n\n    test("this test is using shared environment", 1, function (assert) {\n        deepEqual({ test: 123 }, this.options, "passing test");\n    });\n\n    test("this is an async test example", function (assert) {\n        expect(2);\n        stop();\n        setTimeout(function () {\n            ok(true, "finished async test");\n            strictEqual(true, true, "Strict equal assertion uses ===");\n            start();\n        }, 100);\n    });\n\n\n### Run tests\n\n    npm i\n    npm test\n\n### Coverage\n\nCode coverage via Istanbul. To utilize, install `istanbul` and set option `coverage: true` or pass `--cov` parameter in the shell. Coverage calculations based on code and tests passed to `node-qunit`.\n',
28 silly resolved     readmeFilename: 'readme.md',
28 silly resolved     bugs: { url: 'https://github.com/kof/node-qunit/issues' },
28 silly resolved     homepage: 'https://github.com/kof/node-qunit',
28 silly resolved     _id: 'qunit@0.6.3',
28 silly resolved     _shasum: 'ae075d5643a855fe86abdac6bf528d74a2a306cb',
28 silly resolved     _from: 'qunit@',
28 silly resolved     _resolved: 'https://registry.npmjs.org/qunit/-/qunit-0.6.3.tgz' } ]
29 info install qunit@0.6.3 into /Users/paul/Documents/workbench/Node/webrtc_presentation
30 info installOne qunit@0.6.3
31 info /Users/paul/Documents/workbench/Node/webrtc_presentation/node_modules/qunit unbuild
32 info preuninstall qunit@0.6.3
33 info uninstall qunit@0.6.3
34 verbose true,/Users/paul/Documents/workbench/Node/webrtc_presentation/node_modules,/Users/paul/Documents/workbench/Node/webrtc_presentation/node_modules unbuild qunit@0.6.3
35 verbose /Users/paul/Documents/workbench/Node/webrtc_presentation/node_modules/.bin,[object Object] binRoot
36 info postuninstall qunit@0.6.3
37 info /Users/paul/Documents/workbench/Node/webrtc_presentation/node_modules/qunit unbuild
38 error error rolling back Error: EACCES, unlink '/Users/paul/Documents/workbench/Node/webrtc_presentation/node_modules/qunit/node_modules/.bin/istanbul'
38 error error rolling back  qunit@0.6.3 { [Error: EACCES, unlink '/Users/paul/Documents/workbench/Node/webrtc_presentation/node_modules/qunit/node_modules/.bin/istanbul']
38 error error rolling back   errno: 3,
38 error error rolling back   code: 'EACCES',
38 error error rolling back   path: '/Users/paul/Documents/workbench/Node/webrtc_presentation/node_modules/qunit/node_modules/.bin/istanbul' }
39 error Error: EACCES, unlink '/Users/paul/Documents/workbench/Node/webrtc_presentation/node_modules/qunit/node_modules/.bin/istanbul'
39 error  { [Error: EACCES, unlink '/Users/paul/Documents/workbench/Node/webrtc_presentation/node_modules/qunit/node_modules/.bin/istanbul']
39 error   errno: 3,
39 error   code: 'EACCES',
39 error   path: '/Users/paul/Documents/workbench/Node/webrtc_presentation/node_modules/qunit/node_modules/.bin/istanbul' }
40 error Please try running this command again as root/Administrator.
41 error System Darwin 13.2.0
42 error command "node" "/usr/local/bin/npm" "install" "qunit"
43 error cwd /Users/paul/Documents/workbench/Node/webrtc_presentation
44 error node -v v0.10.28
45 error npm -v 1.4.9
46 error path /Users/paul/Documents/workbench/Node/webrtc_presentation/node_modules/qunit/node_modules/.bin/istanbul
47 error code EACCES
48 error errno 3
49 error stack Error: EACCES, unlink '/Users/paul/Documents/workbench/Node/webrtc_presentation/node_modules/qunit/node_modules/.bin/istanbul'
50 verbose exit [ 3, true ]
